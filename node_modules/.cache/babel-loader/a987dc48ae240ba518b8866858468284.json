{"ast":null,"code":"var _jsxFileName = \"/home/jorgeda/Descargas/Quantil/C#_NET_Core/AppEcopetrol/app-ecopetrol/src/components/PopUp.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport './style_popup.css';\nexport default class PopUp extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClose = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n\n    this.handleClick = () => {\n      this.props.toggle();\n    };\n\n    this.state = {\n      // Initially, no file is selected \n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state \n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData \n      const formData = new FormData(); //const url = `http://localhost:3000/app-ecopetrol/src/components/file`;\n      // Update the formData object\n\n      if (this.state.selectedFile) {\n        formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 3\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 4\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 4\n          }\n        }, \"Debe elegir archivo antes de cargar\"));\n      } // Details of the uploaded file \n\n\n      console.log(this.state.selectedFile); // Request made to the backend api \n      // Send formData object \n\n      axios.post('app-ecopetrol/src/components/file', formData);\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 3\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 4\n          }\n        }, \"Detalles de la carga:\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 4\n          }\n        }, \"Nombre del Archivo: \", this.state.selectedFile.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 4\n          }\n        }, \"Tipo de Archivo: \", this.state.selectedFile.type), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 4\n          }\n        }, \"Ultima modificaci\\xF3n:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 3\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 4\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 4\n          }\n        }, \"Elegir archivo antes de cargar\"));\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal_content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 6\n      }\n    }, \"close\")), \"open=\", this.state.isOpen, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }\n    }, \"Quantil-Ecopetrol\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 4\n      }\n    }, \"Cargar Archivo\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onFileUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }\n    }, \"Cargar!\"), this.fileData())));\n  }\n\n}","map":{"version":3,"sources":["/home/jorgeda/Descargas/Quantil/C#_NET_Core/AppEcopetrol/app-ecopetrol/src/components/PopUp.js"],"names":["React","Component","axios","PopUp","handleClose","setState","isOpen","handleClick","props","toggle","state","selectedFile","onFileChange","event","target","files","onFileUpload","formData","FormData","append","name","console","log","post","fileData","type","lastModifiedDate","toDateString","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AAGA,eAAe,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAE5CG,WAF4C,GAE9B,MAAM;AACpB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACC,KAJ2C;;AAAA,SAM5CC,WAN4C,GAM9B,MAAM;AACpB,WAAKC,KAAL,CAAWC,MAAX;AACG,KARyC;;AAAA,SAY3CC,KAZ2C,GAYnC;AAET;AACAC,MAAAA,YAAY,EAAE;AAHL,KAZmC;;AAAA,SAmB5CC,YAnB4C,GAmB7BC,KAAK,IAAI;AAExB;AACA,WAAKR,QAAL,CAAc;AAAEM,QAAAA,YAAY,EAAEE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AAEC,KAxB2C;;AAAA,SA2B5CC,YA3B4C,GA2B7B,MAAM;AAErB;AACG,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAHkB,CAIlB;AAEH;;AACA,UAAI,KAAKR,KAAL,CAAWC,YAAf,EAA6B;AAC7BM,QAAAA,QAAQ,CAACE,MAAT,CACC,QADD,EAEC,KAAKT,KAAL,CAAWC,YAFZ,EAGC,KAAKD,KAAL,CAAWC,YAAX,CAAwBS,IAHzB;AAKC,OAND,MAMO;AACN,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAFD,CADA;AAMA,OApBoB,CAsBrB;;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,YAAvB,EAvBqB,CAyBrB;AACA;;AACAT,MAAAA,KAAK,CAACqB,IAAN,CAAW,mCAAX,EAAgDN,QAAhD;AAIC,KA1D2C;;AAAA,SAwE5CO,QAxE4C,GAwEjC,MAAM;AAEjB,UAAI,KAAKd,KAAL,CAAWC,YAAf,EAA6B;AAE5B,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAwB,KAAKD,KAAL,CAAWC,YAAX,CAAwBS,IAAhD,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAqB,KAAKV,KAAL,CAAWC,YAAX,CAAwBc,IAA7C,CAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACqB,GADrB,EAEC,KAAKf,KAAL,CAAWC,YAAX,CAAwBe,gBAAxB,CAAyCC,YAAzC,EAFD,CAJD,CADA;AAWA,OAbD,MAaO;AACN,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFD,CADA;AAMA;AACA,KA/F2C;AAAA;;AAoG3CC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAQ,MAAA,OAAO,EAAE,KAAKxB,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,CADI,WAIE,KAAKM,KAAL,CAAWJ,MAJb,eAKE;AAAM,MAAA,OAAO,EAAE,KAAKC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAQJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BARI,eAWL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXK,eAcL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKK,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAGC;AAAQ,MAAA,OAAO,EAAE,KAAKI,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHD,EAOE,KAAKQ,QAAL,EAPF,CAdK,CADF,CADF;AA6BD;;AAlI0C","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\nimport './style_popup.css'\n\n\nexport default class PopUp extends Component {\n\n\thandleClose = () => {\n\tthis.setState({ isOpen: false });\n\t}  \n\t\n\thandleClick = () => {\n\tthis.props.toggle();\n  \t};\n\n\n\n  state = { \n\n\t// Initially, no file is selected \n\tselectedFile: null\n\t}; \n\t\n\t// On file select (from the pop up) \n\tonFileChange = event => { \n\t\n\t// Update the state \n\tthis.setState({ selectedFile: event.target.files[0] });\n\t\n\t}; \n\t\n\t// On file upload (click the upload button) \n\tonFileUpload = () => { \n\t\n\t// Create an object of formData \n    const formData = new FormData(); \n    //const url = `http://localhost:3000/app-ecopetrol/src/components/file`;\n\t\n\t// Update the formData object\n\tif (this.state.selectedFile) {\n\tformData.append( \n\t\t\"myFile\",\n\t\tthis.state.selectedFile, \n\t\tthis.state.selectedFile.name \n\t); \n\t} else { \n\t\treturn ( \n\t\t<div> \n\t\t\t<br /> \n\t\t\t<h4>Debe elegir archivo antes de cargar</h4> \n\t\t</div> \n\t\t); \n\t} \n\n\t// Details of the uploaded file \n\tconsole.log(this.state.selectedFile); \n\t\n\t// Request made to the backend api \n\t// Send formData object \n\taxios.post('app-ecopetrol/src/components/file', formData);\n\t\n\n\n\t}; \n\n\t//***fileUploader = () => {\n\t//if (this.state.selectedFile) { \n\t//\treturn ( \n\t//\t<div> \n\t//\t\t<h2>Archivo cargado:</h2> \n\t//\t</div> \n\t//\t); \n\t//};\n    //};\n\n\t// File content to be displayed after \n\t// file upload is complete \n\tfileData = () => { \n\t\n\tif (this.state.selectedFile) { \n\t\t\n\t\treturn ( \n\t\t<div> \n\t\t\t<h2>Detalles de la carga:</h2> \n\t\t\t<p>Nombre del Archivo: {this.state.selectedFile.name}</p> \n\t\t\t<p>Tipo de Archivo: {this.state.selectedFile.type}</p> \n\t\t\t<p> \n\t\t\tUltima modificación:{\" \"} \n\t\t\t{this.state.selectedFile.lastModifiedDate.toDateString()} \n\t\t\t</p> \n\t\t</div> \n\t\t); \n\t} else { \n\t\treturn ( \n\t\t<div> \n\t\t\t<br /> \n\t\t\t<h4>Elegir archivo antes de cargar</h4> \n\t\t</div> \n\t\t); \n\t} \n\t}; \n\n\n\n\n  render() {\n    return (\n      <div className = \"modal\">\n        <div className=\"modal_content\">\n\t\t  <div>\n\t\t\t  <button onClick={this.handleClose}>close</button>\n\t\t  </div>\n\t\t  open={this.state.isOpen}\n          <span onClick={this.handleClick}>\n            &times;\n          </span>\n\t\t  <h1> \n\t\t\tQuantil-Ecopetrol \n\t\t\t</h1> \n\t\t\t<h3> \n\t\t\tCargar Archivo \n\t\t\t</h3> \n\t\t\t<div> \n\t\t\t\t<input type=\"file\" onChange={this.onFileChange} />\n\t\t\t\t\n\t\t\t\t<button onClick={this.onFileUpload}> \n\t\t\t\tCargar! \n\t\t\t\t</button>\n\t\t\t\t\n\t\t\t\t{this.fileData()}\n\t\t\t</div> \n\t\t\t \n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}