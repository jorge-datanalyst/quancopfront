{"ast":null,"code":"var _jsxFileName = \"/home/jorgeda/Descargas/Quantil/C#_NET_Core/AppEcopetrol/app-ecopetrol/src/components/uploadfile.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\n\nclass UploadFile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected \n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state \n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      // Create an object of formData \n      const formData = new FormData(); //const url = `http://localhost:3000/app-ecopetrol/src/components/file`;\n      // Update the formData object \n\n      formData.append(\"myFile\", this.state.selectedFile, this.state.selectedFile.name); // Details of the uploaded file \n\n      console.log(this.state.selectedFile); // Request made to the backend api \n      // Send formData object \n\n      axios.post('app-ecopetrol/src/components/file', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 3\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 4\n          }\n        }, \"File Details:\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 4\n          }\n        }, \"File Name: \", this.state.selectedFile.name), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 4\n          }\n        }, \"File Type: \", this.state.selectedFile.type), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 4\n          }\n        }, \"Last Modified:\", \" \", this.state.selectedFile.lastModifiedDate.toDateString()));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 3\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 4\n          }\n        }), /*#__PURE__*/React.createElement(\"h4\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 4\n          }\n        }, \"Elegir archivo antes de cargar\"));\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, \"Quantil-Ecopetrol\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }\n    }, \"Cargar Archivo\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.onFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onFileUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }, \"Cargar!\")), this.fileData());\n  }\n\n} ///home/jorgeda/Descargas/Quantil/C#_NET_Core/base/app-base/src/components/file\n//https://medium.com/@daniela.sandoval/creating-a-popup-window-using-js-and-react-4c4bd125da57\n\n\nexport default UploadFile;","map":{"version":3,"sources":["/home/jorgeda/Descargas/Quantil/C#_NET_Core/AppEcopetrol/app-ecopetrol/src/components/uploadfile.js"],"names":["axios","React","Component","UploadFile","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","headers","fileData","type","lastModifiedDate","toDateString","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAElCE,KAFkC,GAE1B;AAER;AACAC,MAAAA,YAAY,EAAE;AAHN,KAF0B;;AAAA,SASlCC,YATkC,GASnBC,KAAK,IAAI;AAExB;AACA,WAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AAEC,KAdiC;;AAAA,SAiBlCC,YAjBkC,GAiBnB,MAAM;AAErB;AACG,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAHkB,CAIlB;AAEH;;AACAD,MAAAA,QAAQ,CAACE,MAAT,CACC,QADD,EAEC,KAAKV,KAAL,CAAWC,YAFZ,EAGC,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAHzB,EAPqB,CAarB;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,YAAvB,EAdqB,CAgBrB;AACA;;AACGL,MAAAA,KAAK,CAACkB,IAAN,CAAW,mCAAX,EAAgDN,QAAhD,EAA0D;AAAEO,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAAX,OAA1D;AACF,KApCiC;;AAAA,SAwClCC,QAxCkC,GAwCvB,MAAM;AAEjB,UAAI,KAAKhB,KAAL,CAAWC,YAAf,EAA6B;AAE5B,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAAvC,CAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,KAAKX,KAAL,CAAWC,YAAX,CAAwBgB,IAAvC,CAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACe,GADf,EAEC,KAAKjB,KAAL,CAAWC,YAAX,CAAwBiB,gBAAxB,CAAyCC,YAAzC,EAFD,CAJD,CADA;AAWA,OAbD,MAaO;AACN,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFD,CADA;AAMA;AACA,KA/DiC;AAAA;;AAiElCC,EAAAA,MAAM,GAAG;AAET,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJD,eAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAE,KAAKlB,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAQ,MAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFD,CAPD,EAaC,KAAKS,QAAL,EAbD,CADD;AAiBC;;AApFiC,C,CAsFnC;AACA;;;AACA,eAAejB,UAAf","sourcesContent":["import axios from 'axios'; \n\nimport React,{Component} from 'react'; \n\nclass UploadFile extends Component { \n\n\tstate = { \n\n\t// Initially, no file is selected \n\tselectedFile: null\n\t}; \n\t\n\t// On file select (from the pop up) \n\tonFileChange = event => { \n\t\n\t// Update the state \n\tthis.setState({ selectedFile: event.target.files[0] }); \n\t\n\t}; \n\t\n\t// On file upload (click the upload button) \n\tonFileUpload = () => { \n\t\n\t// Create an object of formData \n    const formData = new FormData(); \n    //const url = `http://localhost:3000/app-ecopetrol/src/components/file`;\n\t\n\t// Update the formData object \n\tformData.append( \n\t\t\"myFile\", \n\t\tthis.state.selectedFile, \n\t\tthis.state.selectedFile.name \n\t); \n\t\n\t// Details of the uploaded file \n\tconsole.log(this.state.selectedFile); \n\t\n\t// Request made to the backend api \n\t// Send formData object \n    axios.post('app-ecopetrol/src/components/file', formData, { headers: { 'Content-Type': 'application/json', } })\n\t}; \n\t\n\t// File content to be displayed after \n\t// file upload is complete \n\tfileData = () => { \n\t\n\tif (this.state.selectedFile) { \n\t\t\n\t\treturn ( \n\t\t<div> \n\t\t\t<h2>File Details:</h2> \n\t\t\t<p>File Name: {this.state.selectedFile.name}</p> \n\t\t\t<p>File Type: {this.state.selectedFile.type}</p> \n\t\t\t<p> \n\t\t\tLast Modified:{\" \"} \n\t\t\t{this.state.selectedFile.lastModifiedDate.toDateString()} \n\t\t\t</p> \n\t\t</div> \n\t\t); \n\t} else { \n\t\treturn ( \n\t\t<div> \n\t\t\t<br /> \n\t\t\t<h4>Elegir archivo antes de cargar</h4> \n\t\t</div> \n\t\t); \n\t} \n\t}; \n\t\n\trender() { \n\t\n\treturn ( \n\t\t<div> \n\t\t\t<h1> \n\t\t\tQuantil-Ecopetrol \n\t\t\t</h1> \n\t\t\t<h3> \n\t\t\tCargar Archivo \n\t\t\t</h3> \n\t\t\t<div> \n\t\t\t\t<input type=\"file\" onChange={this.onFileChange} /> \n\t\t\t\t<button onClick={this.onFileUpload}> \n\t\t\t\tCargar! \n\t\t\t\t</button> \n\t\t\t</div> \n\t\t{this.fileData()} \n\t\t</div> \n\t); \n\t} \n} \n///home/jorgeda/Descargas/Quantil/C#_NET_Core/base/app-base/src/components/file\n//https://medium.com/@daniela.sandoval/creating-a-popup-window-using-js-and-react-4c4bd125da57\nexport default UploadFile; \n"]},"metadata":{},"sourceType":"module"}